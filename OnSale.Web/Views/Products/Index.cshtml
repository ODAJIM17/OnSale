@model IEnumerable<OnSale.Common.Entities.Product>

@{
    ViewData["Title"] = "Index";
}


<div class="card mt-3">
    <div class="card-header">
        <strong>Products</strong>
        <div class="fa-pull-right">
            <a class="btn btn-sm btn-primary" asp-action="Create"><i class="fas fa-plus-circle"> Create New</i></a>
        </div>
    </div>
    <div class="card-body">
        <table class="table table-hover table-responsive-lg table-striped" id="ProductTable">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ImageFullPath)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.IsActive)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.IsStarred)
                    </th>
                    <th>
                        Category
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductImagesNumber)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            <img src="@item.ImageFullPath" style="width:100px;height:100px;max-width: 100%; height: auto;" />
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Price)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IsActive)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IsStarred)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Category.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductImagesNumber)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning"><i class="fas fa-pencil-alt"></i></a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info"><i class="fas fa-align-justify"></i></a>
                            <button data-id="@item.Id" class="btn btn-sm btn-danger deleteItem" data-toggle="modal" data-target="#deleteDialog"><i class="fas fa-trash-alt"></i></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<partial name="_DeleteDialog" />

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="/js/deleteDialog.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#ProductTable').DataTable();
            // Delete item
            sc_deleteDialog.openModal('deleteItem', true, 'btnYesDelete', '/Products/Delete/', false);
        });
    </script>
}

